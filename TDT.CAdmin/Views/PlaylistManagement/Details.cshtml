@model TDT.Core.DTO.Firestore.PlaylistDTO

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="title-admin">Chi tiết playlist</h2>
<hr />
<div>
    <dl class="row" style="align-items:flex-start;">
        <div class="col-md-7">
            <dl class="row">
                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.encodeId)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.encodeId)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.title)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.title)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.thumbnail)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.thumbnail)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.isoffical)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.isoffical)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.link)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.link)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.isIndie)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.isIndie)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.releaseDate)</dt>
                <dd class="col-sm-10" @Model.ReleaseDate().ToString("yyyy-MM-ddTHH:mm:ss")</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.sortDescription)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.sortDescription)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.releasedAt)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.releasedAt)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.PR)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.PR)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.artistsNames)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.artistsNames)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.playItemMode)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.playItemMode)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.subType)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.subType)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.uid)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.uid)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.thumbnailM)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.thumbnailM)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.isShuffle)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.isShuffle)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.isPrivate)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.isPrivate)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.userName)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.userName)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.isAlbum)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.isAlbum)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.textType)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.textType)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.isSingle)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.isSingle)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.distributor)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.distributor)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.description)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.description)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.aliasTitle)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.aliasTitle)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.sectionId)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.sectionId)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.contentLastUpdate)</dt>
                <dd class="col-sm-10">@Model.ContentLastUpdate().ToString("yyyy-MM-ddTHH:mm:ss")</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.like)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.like)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.listen)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.listen)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.liked)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.liked)</dd>
            </dl>
        </div>

        <div class="col-md-5 text-center ">
            <p class="badge badge-primary">@Html.DisplayNameFor(model => model.thumbnailM)</p>
            <p class="img_song img-fluid" encodeid="@Model.encodeId" thumbnail="@Model.thumbnailM">
            </p>
            <p class="badge badge-primary">@Html.DisplayNameFor(model => model.thumbnail)</p>
            <p class="img_song" encodeid="@Model.encodeId" thumbnail="@Model.thumbnail"></p>
        </div>
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>
<script>
    $(".img_song").each(function (e, val) {
        var id = $(this).attr("encodeid");
        var thumbnail = $(this).attr("thumbnail");
        loadImg(this, id, thumbnail);
        console.log(id, thumbnail);

    })
    function loadImg(that, _id, _thumbnail) {
        $.ajax({
            url: "/PlaylistManagement/LoadImg",
            data: {
                encodeID: _id,
                thumbnail: _thumbnail
            },
            success: function (data) {
                // $('#img_song').html(data);
                $(that).html('<img style="width: 200px;" class="thumbnail" src="' + data + '"/>');
            }
        });
    }

</script>