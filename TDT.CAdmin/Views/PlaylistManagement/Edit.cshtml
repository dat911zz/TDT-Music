@model TDT.Core.DTO.Firestore.PlaylistDTO

@{
    ViewData["Title"] = "Edit Playlist";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    DateTime maxDate = DateTime.Now.AddDays(1);
    string maxDateString = maxDate.ToString("yyyy-MM-dd");
}
<h2 class="title-admin">Chỉnh sửa thông tin playlist</h2>
<hr />

<form asp-action="Edit">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row" style="align-items:flex-start;">
        <div class="col-md-8">
            <div class="form-group">
                <label asp-for="encodeId" class="control-label"></label>
                <input asp-for="encodeId" class="form-control" readonly />
                <span asp-validation-for="encodeId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="title" class="control-label"></label>
                <input asp-for="title" class="form-control" oninput="validateEmtiy(this, 'title-message');" onblur="validateEmtiy(this, 'title-message');" />
                <span asp-validation-for="title" class="text-danger" id="title-message"></span>
            </div>

            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="isoffical" /> @Html.DisplayNameFor(model => model.isoffical)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="link" class="control-label"></label>
                <input asp-for="link" class="form-control" />
                <span asp-validation-for="link" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="isIndie" /> @Html.DisplayNameFor(model => model.isIndie)
                </label>
            </div>
            @* / *@
            <div class="form-group">
                <label asp-for="releaseDate" class="control-label"></label>
                <input id="releaseDateInput" class="form-control" type="datetime-local" value="@Model.ReleaseDate().ToString("yyyy-MM-ddTHH:mm:ss")" />
                <span id="releaseDateError" class="text-danger"></span>
            </div>
            <div class="form-group" hidden>
                <input asp-for="releaseDate" class="form-control" type="number" readonly />
                <span asp-validation-for="releaseDate" class="text-danger"></span>
            </div>
            @* / *@           
            <div class="form-group">
                <label asp-for="sortDescription" class="control-label"></label>
                <input asp-for="sortDescription" class="form-control" />
                <span asp-validation-for="sortDescription" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="PR" /> @Html.DisplayNameFor(model => model.PR)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="artistsNames" class="control-label"></label>
                <input asp-for="artistsNames" class="form-control" oninput="validateEmtiy(this, 'artistsNames-message');" onblur="validateEmtiy(this, 'artistsNames-message');" />
                <span asp-validation-for="artistsNames" class="text-danger" id="artistsNames-message"></span>
            </div>
            <div class="form-group">
                <label asp-for="playItemMode" class="control-label"></label>
                <input asp-for="playItemMode" class="form-control" />
                <span asp-validation-for="playItemMode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="subType" class="control-label"></label>
                <input asp-for="subType" class="form-control" />
                <span asp-validation-for="subType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="uid" class="control-label"></label>
                <input asp-for="uid" class="form-control" />
                <span asp-validation-for="uid" class="text-danger"></span>
            </div>

            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="isShuffle" /> @Html.DisplayNameFor(model => model.isShuffle)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="isPrivate" /> @Html.DisplayNameFor(model => model.isPrivate)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="userName" class="control-label"></label>
                <input asp-for="userName" class="form-control" />
                <span asp-validation-for="userName" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="isAlbum" /> @Html.DisplayNameFor(model => model.isAlbum)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="textType" class="control-label"></label>
                <input asp-for="textType" class="form-control" />
                <span asp-validation-for="textType" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="isSingle" /> @Html.DisplayNameFor(model => model.isSingle)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="distributor" class="control-label"></label>
                <input asp-for="distributor" class="form-control" />
                <span asp-validation-for="distributor" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="description" class="control-label"></label>
                <input asp-for="description" class="form-control" />
                <span asp-validation-for="description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="aliasTitle" class="control-label"></label>
                <input asp-for="aliasTitle" class="form-control" />
                <span asp-validation-for="aliasTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="sectionId" class="control-label"></label>
                <input asp-for="sectionId" class="form-control" />
                <span asp-validation-for="sectionId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="contentLastUpdate" class="control-label"></label>
                <input class="form-control" type="datetime-local" readonly value="@Model.ContentLastUpdate().ToString("yyyy-MM-ddTHH:mm:ss")" />
                <span asp-validation-for="contentLastUpdate" class="text-danger"></span>
            </div>
            <div class="form-group" hidden>
                <input asp-for="contentLastUpdate" id="contentLastUpdateInput" class="form-control" type="number" readonly />
                <span asp-validation-for="contentLastUpdate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="like" class="control-label"></label>
                <input asp-for="like" class="form-control" readonly />
                <span asp-validation-for="like" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="listen" class="control-label"></label>
                <input asp-for="listen" class="form-control" readonly />
                <span asp-validation-for="listen" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="liked" /> @Html.DisplayNameFor(model => model.liked)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="thumbnailM" class="control-label"></label>
                <input asp-for="thumbnailM" class="form-control" readonly />
                <span asp-validation-for="thumbnailM" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="thumbnail" class="control-label"></label>
                <input asp-for="thumbnail" class="form-control" readonly />
                <span asp-validation-for="thumbnail" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-4">
            <p class="badge badge-primary">@Html.DisplayNameFor(model => model.thumbnailM)</p>
            <p class="img_song img-fluid" encodeid="@Model.encodeId" thumbnail="@Model.thumbnailM">
            </p>
            @*             <p class="badge badge-primary">Ảnh</p>
            <p class="img_song" encodeid="@Model.encodeId" thumbnail="@Model.thumbnail"></p>
            *@
            <div class="form-group">
                <label class="control-label">Chọn ảnh mới</label>
                <input class="form-control" name="uploadFile" type="file" />

            </div>
        </div>
    </div>
    <div class="form-group">
        <input type="submit" value="Lưu" id="submit-create" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>
    $(".img_song").each(function (e, val) {
        var id = $(this).attr("encodeid");
        var thumbnail = $(this).attr("thumbnail");
        loadImg(this, id, thumbnail);
        console.log(id, thumbnail);

    })
    function loadImg(that, _id, _thumbnail) {
        $.ajax({
            url: "/PlaylistManagement/LoadImg",
            data: {
                encodeID: _id,
                thumbnail: _thumbnail
            },
            success: function (data) {
                // $('#img_song').html(data);
                $(that).html('<img style="width: 200px;" class="thumbnail" src="' + data + '"/>');
            }
        });
    }
    document.addEventListener("DOMContentLoaded", function () {
        var releaseDateInput = document.getElementById('releaseDateInput');
        var releaseDateHiddenInput = document.querySelector('input[name="releaseDate"]');
        var releaseDateError = document.getElementById("releaseDateError");
        //---
        releaseDateInput.addEventListener("change", function () {
            var selectedDate = new Date(releaseDateInput.value);
            var longValue = GetTicks(selectedDate);
            releaseDateHiddenInput.value = longValue;
        });
        // Kiểm tra date
        releaseDateInput.addEventListener("change", function () {
            var selectedDate = new Date(releaseDateInput.value);

            // Kiểm tra xem ngày đã chọn hợp lệ hay không
            if (selectedDate < new Date("1975-01-01T00:00") || selectedDate > new Date("@maxDateString")) {
                releaseDateError.textContent = "Ngày không hợp lệ, Date trong khoảng 01-01-1975 < Date < Ngày hiện tại ";
            } else {
                releaseDateError.textContent = ""; // Xóa thông báo lỗi nếu ngày hợp lệ.
            }
        });

        var releasedAtInput = document.getElementById('releasedAtInput');
        var releasedAtHiddenInput = document.querySelector('input[name="releasedAt"]');
        var releasedAtError = document.getElementById("releasedAtError");
        releasedAtInput.addEventListener("change", function () {
            var selectedDate = new Date(releasedAtInput.value);
            var longValue = GetTicks(selectedDate);
            releasedAtHiddenInput.value = selectedDate;
        });
        //--
        // Kiểm tra date
        releasedAtInput.addEventListener("change", function () {
            var selectedDate = new Date(releasedAtInput.value);

            // Kiểm tra xem ngày đã chọn hợp lệ hay không
            if (selectedDate < new Date("1975-01-01T00:00") || selectedDate > new Date("@maxDateString")) {
                releasedAtError.textContent = "Ngày không hợp lệ, Date trong khoảng 01-01-1975 < Date < Ngày hiện tại ";
            } else {
                releasedAtError.textContent = ""; // Xóa thông báo lỗi nếu ngày hợp lệ.
            }
        });
        //-------
        var contentLastUpdateInput = document.getElementById("contentLastUpdateInput");
        var datetime = new Date();
        var longValue = GetTicks(datetime);
        contentLastUpdateInput.value = longValue;


    });
    function validateEmtiy(input, messageSpanId) {
        const errorMessage = validateNotEmpty(input) || validateNotMoiKhoangTrang(input);
        const messageSpan = document.getElementById(messageSpanId);
        if (errorMessage) {
            messageSpan.textContent = errorMessage;
            return false; // Có lỗi
        } else {
            messageSpan.textContent = '';
            return true; // Không có lỗi
        }
    }
    document.getElementById("create-form").onsubmit = function () {
        const isTitleValid = validateEmtiy(document.getElementById("title"), 'title-message');
        const artistsNames = validateEmtiy(document.getElementById("artistsNames"), 'artistsNames-message');

        return isTitleValid && && artistsNames;
    };
</script>