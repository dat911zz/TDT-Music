@model IEnumerable<TDT.Core.ModelClone.Playlist>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.encodeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.thumbnail)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.isoffical)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.link)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.isIndie)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.releaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.sortDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.releasedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PR)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.artistsNames)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.playItemMode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.subType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.uid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.thumbnailM)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.isShuffle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.isPrivate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.userName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.isAlbum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.textType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.isSingle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.distributor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.aliasTitle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.sectionId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.contentLastUpdate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.like)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.listen)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.liked)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.encodeId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.thumbnail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.isoffical)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.link)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.isIndie)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.releaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.sortDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.releasedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PR)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.artistsNames)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.playItemMode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.subType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.uid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.thumbnailM)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.isShuffle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.isPrivate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.userName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.isAlbum)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.textType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.isSingle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.distributor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.aliasTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.sectionId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.contentLastUpdate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.like)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.listen)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.liked)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table>
